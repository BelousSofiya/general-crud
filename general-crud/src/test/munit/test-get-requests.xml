<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
	<munit:config name="test-get-launchpad.xml" />
	<munit:test name="test-get-existing-launchpad-correct-request" doc:id="a7a429b7-5fe3-4b09-b2c7-d3c4b1458a6e" >
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="GetLaunchpadByExternalId:\soapkit-config" />
			<munit:enable-flow-source value="getLaunchpad" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock_select_launchpad_from_db" doc:id="d8d4d07a-141f-4854-81db-3d08038662ac" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="0db7aa15-e907-43de-b5aa-f8f67a9c9904" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[[{&#10;   name: "test_name_3",&#10;   locality: "test_locality_3",&#10;   externalId: "test_externalId_3",&#10;   id: 14,&#10;   region: "test_region_3",&#10;   status: "test_status_3"&#10;}]]' mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Prepair_input_xml" doc:id="345bec4c-8cbf-4899-86c4-edfe79048e60" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns roc http://example.com/rocketservice
---
{soapenv#Envelope:
   {soapenv#Header: "",
   soapenv#Body:
      roc#GetLaunchpadByExternalIdRequest:
         {externalId: "munit_externalId_1"}
 }}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<http:request method="POST" doc:name="Request_to_api_main" doc:id="2de2d244-3f0d-44c0-bb9e-186d9419a1b0" config-ref="HTTP_Request_configuration_global" path="/SpaceXdbServiceSoapPort">
				<http:headers ><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/xml"
}]]]></http:headers>
			</http:request>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals doc:name="Assert_equals_payload" doc:id="ff5f7439-d240-4954-887a-f5f94d6da956" actual="#[payload]" expected='#[%dw 2.0&#10;output application/xml&#10;import getTestsDwl::outputLaunchPadCorrectRequest&#10;---&#10;outputLaunchPadCorrectRequest::main({payload: payload, attributes: attributes, vars: vars})]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="test-get-not-existing-launchpad" doc:id="dcc94f2a-84ef-4382-a670-662232aea4f6" >
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="GetLaunchpadByExternalId:\soapkit-config" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock_select_launchpad_from_db" doc:id="a7ed413a-f258-473e-b26f-b060a29a1a78" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="1a7969d0-d2cb-474d-b445-9fa7b45b9f6a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[[]]" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Prepair_input_xml" doc:id="7988029f-f37b-4b24-85ba-75ee34223468" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns roc http://example.com/rocketservice
---
{soapenv#Envelope:
   {soapenv#Header: "",
   soapenv#Body:
      roc#GetLaunchpadByExternalIdRequest:
         {externalId: "munit_externalId_1"}
 }}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<http:request method="POST" doc:name="Request_to_api_main" doc:id="11452cbc-89bb-4325-93f6-d29ec9238d5f" config-ref="HTTP_Request_configuration_global" path="/SpaceXdbServiceSoapPort">
				<http:headers ><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/xml"
}]]]></http:headers>
			</http:request>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert_equals_payload" doc:id="2ce15f3f-6086-4be0-a173-77944e16de73" actual='#[payload]' expected="#[%dw 2.0&#10;output application/xml&#10;import commonTestsDwl::DataNotExistInDb&#10;---&#10;DataNotExistInDb::main({payload: payload, attributes: attributes, vars: vars})]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="test-get-existing-launch-correct-request" doc:id="16281b10-9950-4b99-bd51-3f18bbcc5bb3" >
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="GetLaunchByExternalId:\soapkit-config" />
			<munit:enable-flow-source value="getLaunch" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock_select_launch_from_db" doc:id="98748a45-4d15-47ad-96f7-5097929c3d3b" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="65e7763c-9874-41b7-9263-e5fe9d4d915c" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[[{date: "1000-01-01",&#10;rocketName: "test_rocketName_1",&#10;launchName: "test_launchNsme_1",&#10;success: false,&#10;launchpad_id: 1,&#10;externalId: "test_externalId_1",&#10;details: "test_details_1",&#10;id: 1}]]' mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Prepair_input_xml" doc:id="2892d5f3-deab-4fbc-9216-3fb831799ca0" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns roc http://example.com/rocketservice
---
{soapenv#Envelope:
   {soapenv#Header: "",
   soapenv#Body:
      roc#GetLaunchByExternalIdRequest:
         {externalId: "munit_externalId_1"}
 }}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<http:request method="POST" doc:name="Request_to_api_main" doc:id="8b91aec1-7b9f-4a4f-be3b-280604b34cef" path="/SpaceXdbServiceSoapPort" config-ref="HTTP_Request_configuration_global">
				<http:headers ><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/xml"
}]]]></http:headers>
			</http:request>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert_equals_payload" doc:id="965c53a6-f0a3-4e5f-af06-f44dd2f1f842" actual="#[payload]" expected="#[%dw 2.0&#10;output application/xml&#10;import getTestsDwl::outputLaunchCorrectRequest&#10;---&#10;outputLaunchCorrectRequest::main({payload: payload, attributes: attributes, vars: vars})]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="test-get-launchpad-empty-externalId" doc:id="36532928-f753-4075-8f59-7b3cc60b5c38">
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="GetLaunchpadByExternalId:\soapkit-config" />
			<munit:enable-flow-source value="getLaunchpad" />
		</munit:enable-flow-sources>
		<munit:execution >
			<ee:transform doc:name="Prepair_input_xml" doc:id="59790a63-0cba-4ecd-bd5a-551c5319305a" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns roc http://example.com/rocketservice
---
{soapenv#Envelope:
   {soapenv#Header: "",
   soapenv#Body:
      roc#GetLaunchpadByExternalIdRequest:
         {externalId: ""}
}}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<http:request method="POST" doc:name="Request_to_api_main" doc:id="e7fe2ab4-9907-4d46-81cf-ac0160c4d48a" config-ref="HTTP_Request_configuration_global" path="/SpaceXdbServiceSoapPort">
				<http:headers><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/xml"
}]]]></http:headers>
			</http:request>
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="Transform_payload_to_java_object" doc:id="0372ac88-ddd6-411f-869e-a52b7ebc322b" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:assert-equals doc:name="Assert_equals_externalId_is_required_message" doc:id="2bbe9d03-21db-4998-8ecb-943df6e5f516" actual="#[payload.Envelope.Body.body.Response.message]" expected='#["ExternalId is required!!!"]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="test-get-launch-empty-externalId" doc:id="a65bd538-37c7-4635-8b15-c24de0e4cddd" >
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="GetLaunchByExternalId:\soapkit-config" />
			<munit:enable-flow-source value="getLaunch" />
		</munit:enable-flow-sources>
		<munit:execution >
			<ee:transform doc:name="Prepair_input_xml" doc:id="196be446-00c7-4e0e-9d21-4dce6f2da8bd" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns roc http://example.com/rocketservice
---
{soapenv#Envelope:
   {soapenv#Header: "",
   soapenv#Body:
      roc#GetLaunchByExternalIdRequest:
         {externalId: ""}
}}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<http:request method="POST" doc:name="Request_to_api_main" doc:id="68a96690-a284-4620-8080-d562a8e63b39" config-ref="HTTP_Request_configuration_global" path="/SpaceXdbServiceSoapPort">
				<http:headers ><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/xml"
}]]]></http:headers>
			</http:request>
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="Transform_payload_to_java_object" doc:id="fa8f6dcd-96b8-495e-abb1-f79568f2690e" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:assert-equals doc:name="Assert_equals_externalId_is_required_message" doc:id="3e163ec2-0d3f-48a1-a592-c31af5e29404" actual="#[payload.Envelope.Body.body.Response.message]" expected='#["ExternalId is required!!!"]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="test-get-not-existing-launch" doc:id="ea02e78a-db3e-4a4f-8b74-a072f3d73b31" >
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="GetLaunchByExternalId:\soapkit-config" />
			<munit:enable-flow-source value="getLaunch" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock_select_launch_from_db" doc:id="462a6d4d-e54f-4964-9af9-c40cfc4fa1f2" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d01384d1-7903-457a-8f8a-36fad4a7b1cd" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[[]]" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Prepair_input_xml" doc:id="03587388-ad45-4d88-8568-b5d747691746" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns roc http://example.com/rocketservice
---
{soapenv#Envelope:
   {soapenv#Header: "",
   soapenv#Body:
      roc#GetLaunchByExternalIdRequest:
         {externalId: "munit_externalId_1"}
 }}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<http:request method="POST" doc:name="Request_to_api_main" doc:id="ec44f4c4-fa5e-4fa8-8ccd-278b544858c1" config-ref="HTTP_Request_configuration_global" path="/SpaceXdbServiceSoapPort">
				<http:headers ><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/xml"
}]]]></http:headers>
			</http:request>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals doc:name="Assert_equals_payload" doc:id="17202a0d-3d15-46aa-84fc-f659cb956179" actual="#[payload]" expected="#[%dw 2.0&#10;output application/xml&#10;import commonTestsDwl::DataNotExistInDb&#10;---&#10;DataNotExistInDb::main({payload: payload, attributes: attributes, vars: vars})]"/>
		</munit:validation>
	</munit:test>

</mule>
