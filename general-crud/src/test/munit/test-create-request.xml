<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
	<munit:config name="test-create-request.xml" />
	<munit:test name="test-create-launchpad-correct-request" doc:id="026b650f-c706-4ba7-99f8-5271c3eef412" >
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="CreateLaunchpad:\soapkit-config" />
			<munit:enable-flow-source value="createLauncpad" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock_create_launchpad_in_db" doc:id="b769b700-98d3-441e-a83d-fb8fcca5cd47" processor="db:insert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="beb228a4-5340-467e-b97d-0c701325dc0b" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="#[['id']]" attributeName="autoGeneratedKeysColumnNames" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[[]]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Prepair_input_xml" doc:id="1f3870e8-54cf-4294-81ea-4c27a03f7f5e" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns roc http://example.com/rocketservice
---
 {soapenv#Envelope:
   {soapenv#Header:"",
    soapenv#Body:
      roc#CreateLaunchpadRequest:
         {externalId: "test_externalId_3",
          name: "test_name_2",
          locality: "test_locality_2",
          region: "test_region_2",
          status: "test_status_2"}
   }
}
      ]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<http:request method="POST" doc:name="Request_to_api_main" doc:id="ea1f38d1-c1b0-48a7-9c19-52f4d45b5d1a" config-ref="HTTP_Request_configuration_global" path="/SpaceXdbServiceSoapPort">
				<http:headers ><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/xml"
}]]]></http:headers>
			</http:request>
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="Transform_payload_to_java_object" doc:id="ca33a86f-0349-4fbb-8495-e4d9be580daa" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
				</ee:message>
				<ee:variables >
				</ee:variables>
			</ee:transform>
			<munit-tools:assert-equals doc:name="Assert_equals_create_message" doc:id="458d2b79-fbbe-401b-a29a-18c4fc58be8b" actual="#[payload.Envelope.Body.body.Result.message]" expected='#["Created successfully"]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="test-create-launchpad-data-exists-in-db" doc:id="a346309c-a0d5-4519-96e4-1b52e720cf06" >
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="CreateLaunchpad:\soapkit-config" />
			<munit:enable-flow-source value="createLauncpad" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock_create_launchpad_in_db" doc:id="5dc838b5-86e6-4837-af30-28c85ee69f9c" processor="db:insert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="beb228a4-5340-467e-b97d-0c701325dc0b" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="DB:QUERY_EXECUTION" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Prepair_input_xml" doc:id="68771f95-94ca-428d-961b-4b9dc1bc1408" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns roc http://example.com/rocketservice
---
 {soapenv#Envelope:
   {soapenv#Header:"",
    soapenv#Body:
      roc#CreateLaunchpadRequest:
         {externalId: "test_externalId_3",
          name: "test_name_2",
          locality: "test_locality_2",
          region: "test_region_2",
          status: "test_status_2"}
   }
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<http:request method="POST" doc:name="Request_to_api_main" doc:id="226e0b52-b802-438c-ab1b-7ed596ed3369" config-ref="HTTP_Request_configuration_global" path="/SpaceXdbServiceSoapPort">
				<http:headers ><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/xml"
}]]]></http:headers>
			</http:request>
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="Transform_payload_to_java_object" doc:id="1d620c5a-9d93-45f8-a601-be4495419191" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:assert-equals doc:name="Assert_equals_externalId_has_to_be_unique" doc:id="ceb54c8d-5b5c-42e8-b738-bdbb30736bc0" actual="#[payload.Envelope.Body.body.Response.message]" expected='#["ExternalId has to be unique!"]'/>
		</munit:validation>
	</munit:test>
	<!-- [STUDIO:"test-create-launchpad-data-exists-in-db"]<munit:test name="test-create-launchpad-data-exists-in-db" doc:id="257334e9-9bbf-4c93-a735-3cf06b3f42c9" >
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="CreateLaunchpad:\soapkit-config" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock_check_if_data_already_exists_in_db" doc:id="a2abb855-f1d4-499e-8e06-cee63635dcaf" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="5b2bc92b-a344-4f0c-a7a2-66224fd6103f" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[[{&#10;   name: "test_name_3",&#10;   locality: "test_locality_3",&#10;   externalId: "test_externalId_3",&#10;   id: 14,&#10;   region: "test_region_3",&#10;   status: "test_status_3"&#10;}&#93;&#93;' mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Prepair_input_xml" doc:id="b6bbe870-0089-47b1-a0ce-8f8a7d955c9f" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns roc http://example.com/rocketservice
&#45;&#45;-
 {soapenv#Envelope:
   {soapenv#Header:"",
    soapenv#Body:
      roc#CreateLaunchpadRequest:
         {externalId: "test_externalId_3",
          name: "test_name_2",
          locality: "test_locality_2",
          region: "test_region_2",
          status: "test_status_2"}
   }
}&#93;&#93;></ee:set-payload>
				</ee:message>
			</ee:transform>
			<http:request method="POST" doc:name="Request_to_api_main" doc:id="9aac75c7-7873-4950-a688-77145c748e09" config-ref="HTTP_Request_configuration_global" path="/SpaceXdbServiceSoapPort">
				<http:headers ><![CDATA[#[output application/java
&#45;&#45;-
{
	"Content-Type" : "application/xml"
}&#93;&#93;&#93;></http:headers>
			</http:request>
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Logger_payload" doc:id="ddeb64d9-2466-4ffa-8aa5-f9d6d5a4eea9" message="#[payload&#93;"/>
			<ee:transform doc:name="Transform_payload_to_java_object" doc:id="d1a0b3ff-9070-4405-94de-7f06df78e358" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/java
&#45;&#45;-
payload&#93;&#93;></ee:set-payload>
				</ee:message>
			</ee:transform>
			<logger level="INFO" doc:name="Logger_payload" doc:id="a0ab574b-37f0-421c-aa56-7a1318d14e9c" message="#[payload&#93;"/>
			<munit-tools:assert-equals doc:name="Assert_equals_data_exists_in_db_message" doc:id="252ce6ad-2dbb-463a-bff2-75d8dcb1c5c1" actual="#[payload.body.Response.message&#93;" expected='#["This data exists in db"&#93;'/>
		</munit:validation>
	</munit:test> [STUDIO] -->
	<!-- [STUDIO:"test-create-launch-data-exists-in-db"]<munit:test name="test-create-launch-data-exists-in-db" doc:id="8cd8fbb5-25c5-472a-8f60-f7b4d3aef84f" >
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="CreateLaunch:\soapkit-config" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock_check_if_data_already_exists_in_db" doc:id="1ab2aa17-bfcc-4075-a090-5b9404aab024" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d01384d1-7903-457a-8f8a-36fad4a7b1cd" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[[{date: "1000-01-01",&#10;rocketName: "test_rocketName_1",&#10;launchName: "test_launchNsme_1",&#10;success: false,&#10;launchpad_id: 1,&#10;externalId: "test_externalId_1",&#10;details: "test_details_1",&#10;id: 1}&#93;&#93;' mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Prepair_input_xml" doc:id="abac598d-f4da-48de-afbf-3f7aad39aa2a" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns roc http://example.com/rocketservice
&#45;&#45;-
{soapenv#Envelope:
   {soapenv#Header: "",
    soapenv#Body:
      {roc#CreateLaunchRequest:
         {externalId: "test_externalId_4",
          success: 1,
          details: "test_details_4",
          launchName: "test_launchNsme_4",
          date: "1000-01-01",
          rocketName: "test_rocketName_4"}
      }
   }
} &#93;&#93;></ee:set-payload>
				</ee:message>
			</ee:transform>
			<http:request method="POST" doc:name="Request_to_api_main" doc:id="668c0692-f411-4b5c-87be-bf5f686c99f8" config-ref="HTTP_Request_configuration_global" path="/SpaceXdbServiceSoapPort">
				<http:headers ><![CDATA[#[output application/java
&#45;&#45;-
{
	"Content-Type" : "application/xml"
}&#93;&#93;&#93;></http:headers>
			</http:request>
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="Transform_payload_to_java_object" doc:id="160dac13-85e8-4fb8-a475-517513b7eb9d" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/java
&#45;&#45;-
payload&#93;&#93;></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:assert-equals doc:name="Assert_equals_data_exists_in_db_message" doc:id="c8473dbf-62bd-406d-b1f5-4682671c3f50" actual="#[payload.body.Response.message&#93;" expected='#["This data exists in db"&#93;'/>
		</munit:validation>
	</munit:test> [STUDIO] -->
	<munit:test name="test-create-launch-correct-request" doc:id="5ecc1b4f-fbf6-40d8-b732-0bf23b75f3a3" >
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="CreateLaunch:\soapkit-config" />
			<munit:enable-flow-source value="createLaunch" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock_create_launch_in_db" doc:id="b431d3f9-0342-42a0-baae-6d60c5a1509e" processor="db:insert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="0239911e-de9f-4468-a91a-f0fbcbd054b3" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[[]]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Prepair_input_xml" doc:id="40ea3c5d-03a0-45f9-b443-29b8a492c36b" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns roc http://example.com/rocketservice
---
{soapenv#Envelope:
   {soapenv#Header: "",
    soapenv#Body:
      {roc#CreateLaunchRequest:
         {externalId: "test_externalId_4",
          success: 1,
          details: "test_details_4",
          launchName: "test_launchNsme_4",
          date: "1000-01-01",
          rocketName: "test_rocketName_4"}
      }
   }
}    ]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<http:request method="POST" doc:name="Request_to_api_main" doc:id="c6fa00b5-071c-46ec-97b6-f6006ce56c1f" config-ref="HTTP_Request_configuration_global" path="/SpaceXdbServiceSoapPort">
				<http:headers ><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/xml"
}]]]></http:headers>
			</http:request>
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="Transform_payload_to_java_object" doc:id="e7ce08ab-2273-4cfb-9333-225f2c2a3ef0" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:assert-equals doc:name="Assert_equals_create_message" doc:id="ed56cbd3-d2e5-41de-8441-dab18f386c04" actual="#[payload.Envelope.Body.body.Result.message]" expected='#["Created successfully"]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="test-create-launchpad-invalid-schema" doc:id="75f9e616-5b22-4526-bf37-836c293c8b67" >
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="CreateLaunchpad:\soapkit-config" />
			<munit:enable-flow-source value="createLauncpad" />
		</munit:enable-flow-sources>
		<munit:execution >
			<ee:transform doc:name="Prepair_input_xml" doc:id="da7d344d-e95f-48ea-a05f-8c8754fa0c4d" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns roc http://example.com/rocketservice
---
 {soapenv#Envelope:
   {soapenv#Header:"",
    soapenv#Body:
      roc#CreateLaunchpadRequest:
         {externalId: "test_externalId_3",
          name: "test_name_2",
          locality: "test_locality_2",
          region: "test_region_2"}
   }
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<http:request method="POST" doc:name="Request_to_api_main" doc:id="2a1be0ff-fe0d-46f9-88fd-b5135fc3bc8a" config-ref="HTTP_Request_configuration_global" path="/SpaceXdbServiceSoapPort">
				<http:headers ><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/xml"
}]]]></http:headers>
			</http:request>
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="Transform_payload_to_java_object" doc:id="0c274fe8-af13-4f5a-970c-a904d63645b6" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:assert-equals doc:name="Assert_equals_invalid_xml_schema_message" doc:id="60b948b0-4415-43a7-a032-73528e4d6341" actual="#[payload.Envelope.Body.body.Response.message]" expected='#["Your input xml is wrong"]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="test-create-launch-invalid-schema" doc:id="6014c8a9-b366-46d6-b8b8-d776debaf99c" >
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="CreateLaunch:\soapkit-config" />
			<munit:enable-flow-source value="createLaunch" />
		</munit:enable-flow-sources>
		<munit:execution >
			<ee:transform doc:name="Prepair_input_xml" doc:id="92403ee8-9d15-4812-9562-c209778f51ec" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns roc http://example.com/rocketservice
---
{soapenv#Envelope:
   {soapenv#Header: "",
    soapenv#Body:
      {roc#CreateLaunchRequest:
         {externalId: "test_externalId_4",
          success: 1,
          details: "test_details_4",
          launchName: "test_launchNsme_4",
          date: "1000-01-01"}
      }
   }
}    ]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<http:request method="POST" doc:name="Request_to_api_main" doc:id="e6848d5c-7826-4a39-bdfa-3d5e44d2b407" config-ref="HTTP_Request_configuration_global" path="/SpaceXdbServiceSoapPort">
				<http:headers ><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/xml"
}]]]></http:headers>
			</http:request>
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="Transform_payload_to_java_object" doc:id="5a92e39f-b595-45ca-8954-1d59e64e0e6a" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:assert-equals doc:name="Assert_equals_invalid_xml_schema_message" doc:id="82706a00-1a4c-4946-8a9b-d7db3b0b00a4" actual="#[payload.Envelope.Body.body.Response.message]" expected='#["Your input xml is wrong"]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="test-create-launch-data-exists-in-db" doc:id="8066ee3d-9324-4ec4-a671-8cf5b8a24328">
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="CreateLaunch:\soapkit-config" />
			<munit:enable-flow-source value="createLaunch" />
		</munit:enable-flow-sources>
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock_create_launch_in_db" doc:id="3f18dd26-664b-4e74-9432-3e0ef82f1f4c" processor="db:insert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="0239911e-de9f-4468-a91a-f0fbcbd054b3" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="DB:QUERY_EXECUTION" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<ee:transform doc:name="Prepair_input_xml" doc:id="da4a3f4a-3e82-4c21-867a-13d5c237ec63">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns roc http://example.com/rocketservice
---
{soapenv#Envelope:
   {soapenv#Header: "",
    soapenv#Body:
      {roc#CreateLaunchRequest:
         {externalId: "test_externalId_4",
          success: 1,
          details: "test_details_4",
          launchName: "test_launchNsme_4",
          date: "1000-01-01",
          rocketName: "test_rocketName_4"}
      }
   }
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<http:request method="POST" doc:name="Request_to_api_main" doc:id="e5a0e19f-22fd-4f7d-888f-6edbaf987c22" config-ref="HTTP_Request_configuration_global" path="/SpaceXdbServiceSoapPort">
				<http:headers><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/xml"
}]]]></http:headers>
			</http:request>
		</munit:execution>
		<munit:validation>
			<ee:transform doc:name="Transform_payload_to_java_object" doc:id="72ba3304-ac56-46f8-80a7-07c644ac2828">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:assert-equals doc:name="Assert_equals_externalId_has_to_be_unique" doc:id="79243f5f-4b93-4552-a8b7-71e75f7bf1dc" actual="#[payload.Envelope.Body.body.Response.message]" expected='#["ExternalId has to be unique!"]'/>
		</munit:validation>
	</munit:test>


</mule>
