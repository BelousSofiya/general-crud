<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
	<munit:config name="test-update-requests.xml" />
	<munit:test name="test-update-launchpad-correct-request" doc:id="c984e88c-6dde-4ee0-b22c-de2296c370b6" >
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="UpdateLaunchpad:\soapkit-config" />
			<munit:enable-flow-source value="updateLaunchpad" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock_check_if_data_already_exists_in_db" doc:id="9cffe20c-d0b9-4721-a602-2311e5fb7d66" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b7652330-9350-4920-a231-e1350d1f71de" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[[{&#10;   name: "test_name_3",&#10;   locality: "test_locality_3",&#10;   externalId: "test_externalId_3",&#10;   id: 14,&#10;   region: "test_region_3",&#10;   status: "test_status_3"&#10;}]]' mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock_update_launchpad_in_db" doc:id="395b7883-0a47-4481-895a-7068d8929b65" processor="db:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="8813f734-996e-4975-bcff-47dc178a900a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[[]]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Prepair_input_xml" doc:id="26099789-dbed-44c1-8fbe-5be83ddbcb03" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns roc http://example.com/rocketservice
---
{soapenv#Envelope:
   {soapenv#Header: "",
    soapenv#Body:
       roc#UpdateLaunchpadRequest:
         {externalId: "test_externalId_1",
          name: "test_name_1",
          locality: "test_locality_1",
          region: "test_region_1", 
          status: "test_status_1"
          }
    }
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<http:request method="POST" doc:name="Request_to_api_main" doc:id="0416b7d2-7450-471f-906f-a620acf8ddb1" config-ref="HTTP_Request_configuration_global" path="/SpaceXdbServiceSoapPort">
				<http:headers ><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/xml"
}]]]></http:headers>
			</http:request>
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="Transform_payload_to_java_object" doc:id="775e6cc1-fc4f-4553-a63e-89122a7f80f3" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:assert-equals doc:name="Assert_equals_update_message" doc:id="768a145e-32ad-445c-aff8-5976a4dc6c01" actual="#[payload.Envelope.Body.body.Result.message]" expected='#["Updated successfully"]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="test-update-launchpad-data-not-exists-in-db" doc:id="334f185f-803d-4895-a203-003a8d0717b0" >
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="UpdateLaunchpad:\soapkit-config" />
			<munit:enable-flow-source value="updateLaunchpad" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock_check_if_data_already_exists_in_db" doc:id="6a61c9e2-eef0-48dd-b530-dacefd3a1678" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b7652330-9350-4920-a231-e1350d1f71de" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[[]]" mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Prepair_input_xml" doc:id="16a14f62-2378-4b44-bd88-5bd66da27e06" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns roc http://example.com/rocketservice
---
{soapenv#Envelope:
   {soapenv#Header: "",
    soapenv#Body:
       roc#UpdateLaunchpadRequest:
         {externalId: "test_externalId_1",
          name: "test_name_1",
          locality: "test_locality_1",
          region: "test_region_1", 
          status: "test_status_1"
          }
    }
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<http:request method="POST" doc:name="Request_to_api_main" doc:id="f6ff9a8b-a8ea-4b04-823f-aaa7ab719b60" config-ref="HTTP_Request_configuration_global" path="/SpaceXdbServiceSoapPort">
				<http:headers ><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/xml"
}]]]></http:headers>
			</http:request>
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="Transform_payload_to_java_object" doc:id="55ed033b-e493-4203-98ce-ad18b493ae73" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:assert-equals doc:name="Assert_equals_data_not_exist_in_db_message" doc:id="db05272d-0b56-401e-bc06-f83d1d2c4057" actual="#[payload.Envelope.Body.body.Response.message]" expected='#["This data does not exist in db"]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="test-update-launch-data-not-exists-in-db" doc:id="c26230a3-2de6-41fe-b530-4ab87108720b" >
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="UpdateLaunch:\soapkit-config" />
			<munit:enable-flow-source value="updateLaunch" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock_check_if_data_already_exists_in_db" doc:id="ca98d637-f80f-49ce-8d62-0a8f6ed8c7bf" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d1075656-43f0-482b-817f-4b9f559b3b81" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[[]]" mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Prepair_input_xml" doc:id="7a5c63b6-fac9-4f1b-b650-7e80e0ef9841" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns roc http://example.com/rocketservice
---
{soapenv#Envelope:
   {soapenv#Header: "",
    soapenv#Body:
      {roc#UpdateLaunchRequest:
         {externalId: "test_externalId_4",
          success: 1,
          details: "test_details_4",
          launchName: "test_launchNsme_4",
          date: "1000-01-01",
          rocketName: "test_rocketName_4"}
      }
   }
} ]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<http:request method="POST" doc:name="Request_to_api_main" doc:id="fcf9b608-39fc-4f51-9e42-8e2a185a6c78" config-ref="HTTP_Request_configuration_global" path="/SpaceXdbServiceSoapPort">
				<http:headers ><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/xml"
}]]]></http:headers>
			</http:request>
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="Transform_payload_to_java_object" doc:id="f3feec64-334f-4227-b9e6-47ffd435e86c" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:assert-equals doc:name="Assert_equals_data_not_exist_in_db_message" doc:id="da45e181-d8ae-4945-a747-253d1b3cb445" actual="#[payload.Envelope.Body.body.Response.message]" expected='#["This data does not exist in db"]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="test-update-launch-correct-request" doc:id="52ef7cfd-0a52-463a-9e71-e50383558c11" >
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="UpdateLaunch:\soapkit-config" />
			<munit:enable-flow-source value="updateLaunch" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock_check_if_data_already_exists_in_db" doc:id="73c1cee3-69c7-4c4e-9a40-1476a1fc0b2f" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d1075656-43f0-482b-817f-4b9f559b3b81" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[[{date: "1000-01-01",&#10;rocketName: "test_rocketName_1",&#10;launchName: "test_launchNsme_1",&#10;success: false,&#10;launchpad_id: 1,&#10;externalId: "test_externalId_1",&#10;details: "test_details_1",&#10;id: 1}]]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock_update_launch_in_db" doc:id="d13eccdb-ac7d-4092-8121-e938935c05db" processor="db:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="8fd00816-7b61-497a-a1e9-0f1398a1b4d2" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[[]]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<ee:transform doc:name="Prepair_input_xml" doc:id="c6a9b3d9-d600-4ba5-be45-a2c7b7ddd652" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns roc http://example.com/rocketservice
---
{soapenv#Envelope:
   {soapenv#Header: "",
    soapenv#Body:
      {roc#UpdateLaunchRequest:
         {externalId: "test_externalId_4",
          success: 1,
          details: "test_details_4",
          launchName: "test_launchNsme_4",
          date: "1000-01-01",
          rocketName: "test_rocketName_4"}
      }
   }
} ]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<http:request method="POST" doc:name="Request_to_api_main" doc:id="be7ab22d-6888-4fcb-835b-af577f1e4cc7" config-ref="HTTP_Request_configuration_global" path="/SpaceXdbServiceSoapPort">
				<http:headers ><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/xml"
}]]]></http:headers>
			</http:request>
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="Transform_payload_to_java_object" doc:id="2318d080-d95b-4232-b477-b229feffaae2" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:assert-equals doc:name="Assert_equals_update_message" doc:id="d87c67ba-2b65-405d-892d-0d35f2f5823a" actual="#[payload.Envelope.Body.body.Result.message]" expected='#["Updated successfully"]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="test-update-launchpad-invalid-schema" doc:id="c19a898c-fc3c-41a1-883c-93d0e24b1ec2" >
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="UpdateLaunchpad:\soapkit-config" />
			<munit:enable-flow-source value="updateLaunchpad" />
		</munit:enable-flow-sources>
		<munit:execution >
			<ee:transform doc:name="Prepair_input_xml" doc:id="1add69ea-1029-4a54-8487-3355243935f4" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns roc http://example.com/rocketservice
---
{soapenv#Envelope:
   {soapenv#Header: "",
    soapenv#Body:
       roc#UpdateLaunchpadRequest:
         {externalId: "test_externalId_1",
          name: "test_name_1",
          locality: "test_locality_1",
          region: "test_region_1"
          }
    }
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<http:request method="POST" doc:name="Request_to_api_main" doc:id="c21d6b75-5467-4a54-b08e-651d55337c96" config-ref="HTTP_Request_configuration_global" path="/SpaceXdbServiceSoapPort">
				<http:headers ><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/xml"
}]]]></http:headers>
			</http:request>
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="Transform_payload_to_java_object" doc:id="b300ca5b-6896-49dd-9d1f-10c1736af550" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:assert-equals doc:name="Assert_equals_invalid_xml_schema_message" doc:id="3d95389b-b70d-45ad-a330-540cc764192f" actual="#[payload.Envelope.Body.body.Response.message]" expected='#["Your input xml is wrong"]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="test-update-launch-invalid-schema" doc:id="fa242675-907f-4216-b459-7d4871adc3f4" >
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="UpdateLaunch:\soapkit-config" />
			<munit:enable-flow-source value="updateLaunch" />
		</munit:enable-flow-sources>
		<munit:execution >
			<ee:transform doc:name="Prepair_input_xml" doc:id="c01341c7-fbc8-4fe2-b928-4b8614185af2" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns roc http://example.com/rocketservice
---
{soapenv#Envelope:
   {soapenv#Header: "",
    soapenv#Body:
      {roc#UpdateLaunchRequest:
         {externalId: "test_externalId_4",
          success: 1,
          details: "test_details_4",
          launchName: "test_launchNsme_4",
          date: "1000-01-01"}
      }
   }
} ]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<http:request method="POST" doc:name="Request_to_api_main" doc:id="4cc7290a-2003-40e1-b159-767ac98e4e4d" config-ref="HTTP_Request_configuration_global" path="/SpaceXdbServiceSoapPort">
				<http:headers ><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/xml"
}]]]></http:headers>
			</http:request>
		</munit:execution>
		<munit:validation >
			<ee:transform doc:name="Transform_payload_to_java_object" doc:id="e30d0b8b-b09e-4b04-a211-7e7d4827e2d3" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:assert-equals doc:name="Assert_equals_invalid_xml_schema_message" doc:id="c1e27721-f950-4532-99be-a4de78dcb3ac" actual="#[payload.Envelope.Body.body.Response.message]" expected='#["Your input xml is wrong"]'/>
		</munit:validation>
	</munit:test>


</mule>
